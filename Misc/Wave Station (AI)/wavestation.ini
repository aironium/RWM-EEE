# created by General Airon after some midnight imagination.


[core]
name: aiBase
displayText: Wave Station
class: CustomUnitMetadata
price: 0
maxHp: 50000
mass: 9000
techLevel: 2
buildSpeed: 100s
radius: 50
isBio: false
isBuilding: true
constructionFootprint: -2, -2, 2, 2
footprint: -2, -2, 2, 2
softCollisionOnAll: 5
explodeOnDeath: false
hideScorchMark: true
#autoTriggerCooldownTime: 0.1s
tags: 5x5, mother

[template_transmutate]
buildSpeed: 10s
price: ${res1}=150
addResources: ${res2}=100
canPlayerCancel: false
text: Transmutate ${tra}
description: Convert ${res1} into ${res2}
isLocked: if numberOfUnitsInTeam(withTag='res', lessThan=1)
ai_isHighPriority: if self.resource(type="${res2}", lessThan=100)
iconImage: ROOT:UI/${res2}.png 
iconExtraImage: ROOT:UI/${res1}.png 

[action_MtoN]
@define res1: metal
@define res2: nonmetal
@copyFromSection: template_transmutate
pos: 0.3
@define tra: M->N

[action_NtoM]
@define res1: nonmetal
@define res2: metal
@copyFromSection: template_transmutate
pos: 0.1
@define tra: N->M

[action_MtoS]
@define res1: metal
@define res2: semiconductor 
@copyFromSection: template_transmutate
pos: 0.5
@define tra: M->S

[action_NtoS]
@define res1: nonmetal
@define res2: semiconductor
@copyFromSection: template_transmutate
pos: 0.6
@define tra: N->S

[action_StoM]
@define res1: semiconductor
@define res2: metal
@copyFromSection: template_transmutate
pos: 0.2
@define tra: S->M

[action_StoN]
@define res1: semiconductor 
@define res2: nonmetal
@copyFromSection: template_transmutate
pos: 0.4
@define tra: S->N


[hiddenAction_autoMason]
autoTrigger: if numberOfUnitsInTeam(withTag='mason', lessThan=1) and not self.hasFlag(id=0)
alsoQueueAction: mason
showMessageToAllPlayers: [Wave Station %{self.playerName}] Emergency Mason replacement initiated
addResources: setFlag=0

[action_mason]
isVisible: false
spawnUnits: mason(offsetX=0, offsetY=80)
buildSpeed: 20s
addResources: unsetFlag=0
whenBuilding_playAnimation: yield
spawnEffects: CUSTOM:explode*20


[arm_1]
image_end: armature.png
x: 0
y: 0
drawOverBody: true

[arm_2]
@copyFromSection: arm_1

[effect_implode]
lifeRandom: 25
alpha: 0.3
fadeOut: true
scaleFrom: 1.5
scaleTo: 0.2
image: implode.png
dirOffsetRandom: 90
teamColorRatio: 1
dirSpeedRandom: 1

[effect_explode]
life: 60
alpha: 0.3
fadeOut: true
scaleFrom: 0
scaleTo: 5
image: implode.png
dirOffsetRandom: 90
teamColorRatio: 1
dirSpeedRandom: 1

[effect_buildup]
life: 100
alpha: 1
fadeOut: true
scaleFrom: 0
scaleTo: 3.5
image: buildup.png
teamColorRatio: 1


[animation_yield]
arm1_0: {dir: 0}
arm1_0.5s: {dir: 60}
arm1_1s: {dir: 120}
arm1_2s: {dir: 360}
arm1_3s: {dir: 720}
arm1_4s: {dir: 1440}
arm1_4.5s: {dir: 2880}
arm1_5s: {dir: 0}

arm2_0: {dir: 0}
arm2_0.5s: {dir: -60}
arm2_1s: {dir: -120}
arm2_2s: {dir: -360}
arm2_3s: {dir: -720}
arm2_4s: {dir: -1440}
arm2_4.5s: {dir: -2880}
arm2_5s: {dir: 0}

effect_0s: {name: NONE}
effect_1s: {name: NONE}
effect_2s: {name: NONE}
effect_2.5s: {name: CUSTOM|implode*20}
effect_3s: {name: CUSTOM|implode*20}
effect_4s: {name: CUSTOM|implode*20}
effect_5s: {name: CUSTOM|implode*20}

effect_1s: {name: CUSTOM|buildup}



[hiddenAction_fromConv]
autoTrigger: if self.lastConverted(withinSeconds=25) and not self.tags(includes="conved")

addResources: setFlag=1
debugMessage: converted
temporarilyAddTags: conved
resetCustomTimer: true


[template_wave]
@define wv: 0
text: Task Force Group ${wv}
price: setFlag=0
allowMultipleInQueue: false
ai_isHighPriority: true
buildSpeed: 5s
isLocked: if not self.hasFlag(id=${wv}) and not self.customTimer(laterThanSeconds=${((wv +1) * (wv + 2) - wv)*2})
whenBuilding_playAnimation: yield
addResources: setFlag=${wv + 1}, unsetFlag=${wv}, unsetFlag=0
debugMessage: Squad ${wv} deployed! 
spawnEffects: CUSTOM:explode*20
description: wait for ${wv + 60} seconds 
addAllActionCooldownsTime: ${wv + 100}s
isAlsoViewableByEnemies: true
isActive: if numberOfUnitsInTeam(withTag='atkUnit', lessThan=6)


[action_wave1]
@define wv: 1
@copyFromSection: template_wave
spawnUnits: bayud*${wv + 1}(offsetDir=180, offsetRandomY=80, offsetRandomX=80)

[action_wave2]
@define wv: 2
@copyFromSection: template_wave
spawnUnits: bayud*${wv + 1}(offsetDir=180, offsetRandomY=80, offsetRandomX=80)

[action_wave3]
@define wv: 3
@copyFromSection: template_wave
spawnUnits: bayud*${wv + 1}(offsetDir=180, offsetRandomY=80, offsetRandomX=80)

[action_wave4]
@define wv: 4
@copyFromSection: template_wave
spawnUnits: bayud*${wv + 1}(offsetDir=180, offsetRandomY=80, offsetRandomX=80)

[action_wave5]
@define wv: 5
@copyFromSection: template_wave
spawnUnits: bayud*${wv + 1}(offsetDir=180, offsetRandomY=80, offsetRandomX=80)

[action_wave6]
@define wv: 6
@copyFromSection: template_wave
spawnUnits: bayud*${wv - (wv/2)+1}(offsetDir=180, offsetRandomY=80, offsetRandomX=80), aiam*${(wv/2)-1}(offsetDir=180, offsetRandomY=80, offsetRandomX=80)

[action_wave7]
@define wv: 7
@copyFromSection: template_wave
spawnUnits: bayud*${wv - (wv/2) + 0.5}(offsetDir=180, offsetRandomY=80, offsetRandomX=80), tamaraw*${(wv/2)-0.5}(offsetDir=180, offsetRandomY=80, offsetRandomX=80)

[action_wave8]
@define wv: 8
@copyFromSection: template_wave
spawnUnits: bayud*${wv - (wv/2)+1}(offsetDir=180, offsetRandomY=80, offsetRandomX=80), tamaraw*${(wv/2)-1}(offsetDir=180, offsetRandomY=80, offsetRandomX=80)

[action_wave9]
@define wv: 9
@copyFromSection: template_wave
spawnUnits: tamaraw*${wv - (wv/2) + 0.5}(offsetDir=180, offsetRandomY=80, offsetRandomX=80), tamaraw*${(wv/2)-0.5}(offsetDir=180, offsetRandomY=80, offsetRandomX=80)

[action_wave10]
@define wv: 10
@copyFromSection: template_wave
spawnUnits: tamaraw*${wv - (wv/2)+1}(offsetDir=180, offsetRandomY=80, offsetRandomX=80), aiam*${(wv/2)-1}(offsetDir=180, offsetRandomY=80, offsetRandomX=80), bayud*${(wv/2)-1}(offsetDir=180, offsetRandomY=80, offsetRandomX=80)

[action_wave11]
@define wv: 11
@copyFromSection: template_wave
spawnUnits: tamaraw*${wv - (wv/2) + 0.5}(offsetDir=180, offsetRandomY=80, offsetRandomX=80), aiam*${(wv/2)-0.5}(offsetDir=180, offsetRandomY=80, offsetRandomX=80), bayud*${(wv/2)+0.5}(offsetDir=180, offsetRandomY=80, offsetRandomX=80)

[action_wave12]
@define wv: 12
@copyFromSection: template_wave
spawnUnits: tamaraw*${wv - (wv/2)+1}(offsetDir=180, offsetRandomY=80, offsetRandomX=80), aiam*${(wv/2)-1}(offsetDir=180, offsetRandomY=80, offsetRandomX=80)

[action_wave13]
@define wv: 13
@copyFromSection: template_wave
spawnUnits: tamaraw*${wv - (wv/2) + 0.5}(offsetDir=180, offsetRandomY=80, offsetRandomX=80), aiam*${(wv/2)-0.5}(offsetDir=180, offsetRandomY=80, offsetRandomX=80)

[action_wave14]
@define wv: 14
@copyFromSection: template_wave
spawnUnits: tamaraw*${wv - (wv/2)+1}(offsetDir=180, offsetRandomY=80, offsetRandomX=80), aiam*${(wv/2)-1}(offsetDir=180, offsetRandomY=80, offsetRandomX=80)

[action_wave15]
@define wv: 15
@copyFromSection: template_wave
spawnUnits: tamaraw*${wv - (wv/2) + 0.5}(offsetDir=180, offsetRandomY=80, offsetRandomX=80), aiam*${(wv/2)-0.5}(offsetDir=180, offsetRandomY=80, offsetRandomX=80)

[action_wave16]
@define wv: 16
@copyFromSection: template_wave
spawnUnits: aiam*${wv - (wv/2) + 1}(offsetDir=180, offsetRandomY=80, offsetRandomX=80), bayud*${(wv/2)-1}(offsetDir=180, offsetRandomY=80, offsetRandomX=80)

[action_wave17]
@define wv: 17
@copyFromSection: template_wave
spawnUnits: aiam*${wv - (wv/2) + 2.5}(offsetDir=180, offsetRandomY=80, offsetRandomX=80), bayud*${(wv/2)-0.5}(offsetDir=180, offsetRandomY=80, offsetRandomX=80), pilandokMicro*${wv - (wv/2)-7.5}(offsetDir=180, offsetRandomY=80, offsetRandomX=80)

[action_wave18]
@define wv: 18
@copyFromSection: template_wave
spawnUnits: aiam*${wv - (wv/2)}(offsetDir=180, offsetRandomY=80, offsetRandomX=80), sol*${(wv/2)-2}(offsetDir=180, offsetRandomY=80, offsetRandomX=80)

[action_wave19]
@define wv: 19
@copyFromSection: template_wave
spawnUnits: aiam*${wv - (wv/2) + 0.5}(offsetDir=180, offsetRandomY=80, offsetRandomX=80), sol*${(wv/2)-2.5}(offsetDir=180, offsetRandomY=80, offsetRandomX=80)

[action_wave20]
@define wv: 20
@copyFromSection: template_wave
spawnUnits: aiam*${wv}(offsetDir=180, offsetRandomY=80, offsetRandomX=80), sol*${(wv/2)-3}(offsetDir=180, offsetRandomY=80, offsetRandomX=80), pilandok*2


[graphics]
total_frames: 1
image: base.png
image_wreak: NONE
drawLayer: bottom


[attack]
canAttack: true
canAttackFlyingUnits: false
canAttackLandUnits:   true
canAttackUnderwaterUnits: false
turretSize: 0
turretTurnSpeed: 0
maxAttackRange: 100
shootDelay: 0

[movement]
movementType: NONE
moveSpeed: 0
moveAccelerationSpeed: 0
moveDecelerationSpeed: 0
maxTurnSpeed: 0
turnAcceleration: 0





[ai]
buildPriority: 0.035
maxEachBase: 100
useAsBuilder: true


