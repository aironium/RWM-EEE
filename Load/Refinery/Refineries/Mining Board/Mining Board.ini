[core]
name: miningBoard
displayText: Mining Board
displayDescription: Sessile mining device\n-Can mine any type of resource\n-Can mine fast but has slow resource processing\n-Loading a specific mining unit lets you upgrade this into a specialised refinery
class: CustomUnitMetadata
price: metal=50, nonmetal=20, semiconductor=15
maxHp: 500
mass: 9000
techLevel: 1
buildSpeed: 10s
radius: 25
isBio: false
isBuilding: true
constructionFootprint: -1, -1, 1, 1
footprint: -1, -1, 1, 1
softCollisionOnAll: 5
tags: 3x3, load, res, miningboard
explodeOnDeath: false
hideScorchMark: true
#autoTriggerCooldownTime:0.25s
disableAllUnitCollisions: true
transportUnitsRequireTag: drill, miner, vaccum
maxTransportingUnits: 1
transportUnitsCanUnloadUnits: if self.queueSize(lessThan=1)


#repair stuff
canRepairBuildings: false
canRepairUnits: false
autoRepair: false 
nanoRange: 300

canReclaimResourcesOnlyWithTags: metal, nonmetal, semiconductor
canReclaimResources: true
canReclaimResourcesNextSearchRange: 300
nanoRangeForReclaim:200
nanoRepairSpeed: 0.001
nanoBuildSpeed: 0.001
nanoRange: 200
nanoRangeForReclaimIsMelee:false
isBuilder: true


@memory repairRange:number


[turret_1]
x:0
y:0
isMainNanoTurret: true 
turnSpeed: 9999

[hiddenAction_canRepair]
autoTrigger: if self.resource.current >= 1 and memory.repairRange != 300
setUnitStats: nanoRange=300

[hiddenAction_cannotRepair]
autoTrigger: if self.resource.current < 1 and memory.repairRange != 0
setUnitStats: nanoRange=0


[action_upgradeRefinery]
text: Upgrade: Refinery
description: Upgrade into a Metal Refinery\n-More efficient at processing metals with virtually infinite range through the use of miner crawler
convertTo: refinery
buildSpeed: 95s
price: metal=50, nonmetal=25, semiconductor=25
isVisible: if self.numberOfAttachedUnits(withTag="miner", greaterThan=0)
ai_isHighPriority: true

[action_upgradeCentrifuge]
text: Upgrade: Centrifuge
description: Upgrade into a Semiconductor Centrifuge\n-More efficient at processing semiconductor with virtually infinite range through the use of vaccum crawler
convertTo: centrifuge
buildSpeed: 95s
price: metal=50, nonmetal=25, semiconductor=25
isVisible: if self.numberOfAttachedUnits(withTag="vaccum", greaterThan=0)
ai_isHighPriority: true

[action_upgradeCrusher]
text: Upgrade: Crusher
description: Upgrade into a Nonmetal Crusher\n-More efficient at processing metals with virtually infinite range through the use of drill crawler
convertTo: crusher
buildSpeed: 95s
price: metal=50, nonmetal=25, semiconductor=25
isVisible: if self.numberOfAttachedUnits(withTag="drill", greaterThan=0)
ai_isHighPriority: true

[hiddenAction_burn]
autoTrigger: true
addResources: current=-0.125


[attachment_w1]
x: 0
y: 20
height: -1
onCreateSpawnUnitOf: elecWireAttach(offsetDir=90)
#idleDir: 180
keepAliveWhenParentDies: false
isVisible: false
canBeAttackedAndDamaged: false

[attachment_w2]
x: 0
y: -20
height: -1
onCreateSpawnUnitOf: elecWireAttach(offsetDir=-90)
#idleDir: 90
keepAliveWhenParentDies: false
isVisible: false
canBeAttackedAndDamaged: false

[attachment_w3]
x: 20
y: 0
height: -1
onCreateSpawnUnitOf: elecWireAttach(offsetDir=-180)
#idleDir: -90
keepAliveWhenParentDies: false
isVisible: false
canBeAttackedAndDamaged: false

[attachment_w4]
x: -20
y: 0
height: -1
onCreateSpawnUnitOf: elecWireAttach(offsetDir=0)
#idleDir: 0
keepAliveWhenParentDies: false
isVisible: false
canBeAttackedAndDamaged: false


[attachment_1]
x: 0
y: 0
height: 1
#onCreateSpawnUnitOf: minerCrawler
keepAliveWhenParentDies: true
#isVisible: false
canBeAttackedAndDamaged: true
addTransportedUnits: true
deattachIfWantingToMove: true


[arm_1]
x: 0
y: 0
hidden: if self.resource(type="current") < 1
image_end: cell.png
drawOverBody: true

[graphics]
total_frames: 1
image: body.png
image_wreak: ded_3x3.png 
drawLayer: bottom
reclaimEffect: NONE

[hiddenAction_blink]
fireTurretXAtGround: blink
fireTurretXAtGround_withTarget: unitref activeWaypointTarget
autoTrigger: if self.hasActiveWaypoint(type="reclaim") and distanceBetween(self, activeWaypointTarget) <= 300

[turret_blink]
x: 0
y: 0
canShoot:false
invisible: true
size: 0
shoot_flame: NONE
canOnlyAttackUnitsWithTags: mLink
projectile: link

[projectile_link]
#Critical!
life: 70
instant:true
instantReuseLast: true
instantReuseLast_alsoChangeTurretAim: true
moveWithParent: true
beamImage:      beam.png
beamImageStart: rad.png
beamImageEnd: beamEnd.png
sweepOffsetFromTargetRadius: 0.65
#beamImageStartRotated: true
#beamImageEndRotated: true
beamImageOffsetRate: -0.25
areaDamage: 0
explodeEffect: NONE
drawUnderUnits:false


[attack]
canAttack: false
canAttackFlyingUnits: false
canAttackLandUnits:   false
canAttackUnderwaterUnits: false
turretSize: 0
turretTurnSpeed: 10
maxAttackRange: 200
shootDelay: 0

[movement]
movementType: NONE
moveSpeed: 0
moveAccelerationSpeed: 0
moveDecelerationSpeed: 0
maxTurnSpeed: 0
turnAcceleration: 0

[hiddenAction_resetOverload]
autoTrigger: if self.resource(type="current", greaterThan=20.1)
resourceAmount: current
resourceAmount_setValue: 1
debugMessage: Mining Board Overload Reset


[hiddenAction_convertMetal]
autoTrigger: if self.queueSize(empty=true) and self.resource(type='localMetal', greaterThan=0) and self.resource(type='current', greaterThan=0)
convertResource_from: localMetal
convertResource_to: metal
convertResource_maxAmount: 8
convertResource_minAmount: 0
debugMessage: converting to global metal
convertResource_multiplyAmountBy: 1

[hiddenAction_convertNonmetal]
autoTrigger: if self.queueSize(empty=true) and self.resource(type='localNonmetal', greaterThan=0) and self.resource(type='current', greaterThan=0)
convertResource_from: localNonmetal
convertResource_to: nonmetal
convertResource_maxAmount: 8
convertResource_minAmount: 0
debugMessage: converting to global nonmetal
convertResource_multiplyAmountBy: 1

[hiddenAction_convertSemiconductor]
autoTrigger: if self.queueSize(empty=true) and self.resource(type='localSemiconductor', greaterThan=0) and self.resource(type='current', greaterThan=0)
convertResource_from: localSemiconductor
convertResource_to: semiconductor
convertResource_maxAmount: 8
convertResource_minAmount: 0
debugMessage: converting to global semiconductor
convertResource_multiplyAmountBy: 1

